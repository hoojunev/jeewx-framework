<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	
	<import resource="classpath*:/META-INF/platform-*-shiro.xml" />
	
	<bean id="commonAccountServiceImpl" class="gov.platform.security.service.CommonAccountServiceImpl">
		<property name="customAccountRepository" ref="userAccountRepositoryImpl" />
	</bean>
	
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="authenticator" ref="authenticator" />  -->
		
		<!-- <property name="sessionManager" ref="sessionManager" />  -->
		<property name="subjectFactory" ref="casSubjectFactory" />
		
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<!-- 自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
		<!-- 可配置多个readlm 
		<property name="realm" ref="platformCasRealm" />
				 -->
		<property name="realms">
			
			<list>  
				<!-- cas登录验证 -->
				<bean id="platformCasRealm" class="gov.platform.security.service.PlatformCasRealm">
					<property name="commonAccountService" ref="commonAccountServiceImpl" />
					<property name="platformCasConfig" ref="platformCasConfig" />
				</bean>
				<!-- 本地登录验证 -->
				<bean id="platformAuthorizingRealm" class="gov.platform.security.service.PlatformAuthorizingRealm">
					<property name="commonAccountService" ref="commonAccountServiceImpl" />
					<property name="credentialsMatcher" ref="credentialsMatcher" />
				</bean>
			</list>  
		</property>  
	 	<property name="authenticator.authenticationStrategy">
        	<bean class="gov.platform.security.shiro.FirstExceptionStrategy"/>
    	</property>
	</bean>
	


	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="filters">  
			<map>  
			 <!-- 添加casFilter到shiroFilter -->  
 					<entry key="casFilter" value-ref="casFilter"/>  
			</map>  
		</property>   
		
		<property name="securityManager" ref="securityManager" />
		<!-- see class="gov.platform.security.web.LoginCasRedirectController" -->
		<property name="loginUrl" value="/loginRunTimeRedirect" />
		<property name="successUrl" value="/" />
		<property name="filterChainDefinitions">
			<value>  
				/login = anon
				/logout = authc
				/loginCas = authc
				/resources/** = anon
				/api/** = anon
				/config/code/** = anon
				/shiro-cas = casFilter
				/error/** = anon
				/** = authc
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
	</bean>
	
	<!-- session 管理，默认内存方式 
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
		<property name="sessionDAO" ref="sessionDAO" />  
	</bean>
	
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />  
 	-->
 	
 
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<!--
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	 AOP式方法级权限检查  -->
	
	<aop:config proxy-target-class="false"/>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>
